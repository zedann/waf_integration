# Apache WAF Configuration with ML Integration
# Place this in /etc/apache2/sites-available/ or include in main config

<VirtualHost *:80>
    ServerName waf-demo.local
    DocumentRoot /var/www/waf-demo
    
    # Enable ModSecurity
    LoadModule security2_module modules/mod_security2.so
    
    # ModSecurity Configuration
    <IfModule mod_security2.c>
        # Turn on ModSecurity
        SecRuleEngine On
        
        # Request body handling
        SecRequestBodyAccess On
        SecRequestBodyLimit 134217728
        SecRequestBodyNoFilesLimit 1048576
        SecRequestBodyInMemoryLimit 131072
        SecRequestBodyLimitAction ProcessPartial
        
        # Response body handling
        SecResponseBodyAccess Off
        SecResponseBodyMimeType text/plain text/html text/xml
        SecResponseBodyLimit 524288
        SecResponseBodyLimitAction ProcessPartial
        
        # Temporary directory
        SecTmpDir /tmp/
        SecDataDir /tmp/
        
        # Debug logging
        SecDebugLog /var/log/apache2/modsec_debug.log
        SecDebugLogLevel 0
        
        # Audit logging
        SecAuditEngine RelevantOnly
        SecAuditLogRelevantStatus ^(?:5|4(?!04))
        SecAuditLogParts ABDEFHIJZ
        SecAuditLogType Serial
        SecAuditLog /var/log/apache2/modsec_audit.log
        
        # File uploads
        SecUploadDir /tmp/
        SecUploadKeepFiles Off
        
        # ML Integration Rules
        
        # Rule 1: DDoS Detection via ML
        SecRule REQUEST_METHOD "@detectByRegex" \
            "id:1001,\
            phase:1,\
            t:none,\
            msg:'ML DDoS Detection',\
            logdata:'Matched Data: %{MATCHED_VAR} found within %{MATCHED_VAR_NAME}',\
            tag:'attack-ddos',\
            tag:'ML',\
            exec:/usr/local/bin/waf_ml_check.sh"
        
        # Rule 2: SQL/XSS Detection via ML
        SecRule ARGS "@detectByRegex" \
            "id:1002,\
            phase:2,\
            t:none,\
            msg:'ML SQL/XSS Detection',\
            logdata:'Matched Data: %{MATCHED_VAR} found within %{MATCHED_VAR_NAME}',\
            tag:'attack-sqli',\
            tag:'attack-xss',\
            tag:'ML',\
            exec:/usr/local/bin/waf_ml_check.sh"
        
        # Custom ML Analysis Rule
        SecRule REQUEST_URI "@unconditionalMatch" \
            "id:1003,\
            phase:1,\
            t:none,\
            msg:'ML WAF Analysis',\
            pass,\
            exec:/usr/local/bin/ml_waf_analyzer.sh"
        
        # Block based on ML analysis result
        SecRule &TX:ML_BLOCK "@eq 1" \
            "id:1004,\
            phase:5,\
            t:none,\
            msg:'Request blocked by ML analysis: %{tx.ml_reason}',\
            deny,\
            status:403,\
            logdata:'ML Scores - DDoS: %{tx.ml_ddos_score}, SQL/XSS: %{tx.ml_sql_xss_score}'"
    </IfModule>
    
    # Performance monitoring
    <Location "/waf-status">
        SetHandler server-status
        Require local
    </Location>
    
    # Error and access logs
    ErrorLog /var/log/apache2/waf_error.log
    CustomLog /var/log/apache2/waf_access.log combined
    
    # Custom log format with performance metrics
    LogFormat "%h %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\" %D" waf_perf
    CustomLog /var/log/apache2/waf_performance.log waf_perf
</VirtualHost>

# Alternative ModSecurity configuration for inline ML processing
<IfModule mod_security2.c>
    # Custom action for ML processing
    SecAction \
        "id:2001,\
        phase:1,\
        t:none,\
        msg:'Initialize ML processing',\
        pass,\
        setvar:'tx.ml_processing_enabled=1'"
    
    # Collect request data for ML analysis
    SecRule REQUEST_METHOD "@unconditionalMatch" \
        "id:2002,\
        phase:1,\
        t:none,\
        msg:'Collect request metadata for ML',\
        pass,\
        setvar:'tx.request_size=%{REQUEST_BODY_LENGTH}',\
        setvar:'tx.uri_length=%{env.REQUEST_URI_LENGTH}',\
        setvar:'tx.user_agent=%{REQUEST_HEADERS.User-Agent}'"
    
    # Process collected data through ML models
    SecRule TX:ML_PROCESSING_ENABLED "@eq 1" \
        "id:2003,\
        phase:2,\
        t:none,\
        msg:'ML Analysis Phase',\
        pass,\
        exec:/usr/local/bin/process_ml_request.py"
</IfModule> 